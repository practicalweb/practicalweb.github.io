<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[PracticalWeb Ltd]]></title>
  <link href="http://www.practicalweb.co.uk/atom.xml" rel="self"/>
  <link href="http://www.practicalweb.co.uk/"/>
  <updated>2016-04-05T15:29:32+01:00</updated>
  <id>http://www.practicalweb.co.uk/</id>
  <author>
    <name><![CDATA[Sean Burlington]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ubuntu Mysql Root Password Reset (Init File Not Found)]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2015/10/09/ubuntu-mysql-root-password-reset-init-file-not-found/"/>
    <updated>2015-10-09T17:13:21+01:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2015/10/09/ubuntu-mysql-root-password-reset-init-file-not-found</id>
    <content type="html"><![CDATA[<p>If you don&rsquo;t use the mysql root account very often and change passwords reasonably frequently you may (like me) find that you no longer know the mysql root password on a dev box.</p>

<p>The mysql site has a reasonable guide here <a href="https://dev.mysql.com/doc/refman/5.0/en/resetting-permissions.html#resetting-permissions-unix">https://dev.mysql.com/doc/refman/5.0/en/resetting-permissions.html#resetting-permissions-unix</a></p>

<p>But there always seems to be something additional, this time for me it was apparmor preventing mysql from reading my reset file</p>

<p>to reset I had to
 look in /etc/apparmor.d/usr.sbin.mysqld and identify /etc/mysql/conf.d/ as a good place to place a reset init file</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo su
</span><span class='line'>service stop mysql
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;SET PASSWORD FOR &#39;root&#39;@&#39;localhost&#39; = PASSWORD(&#39;MyNewPass&#39;);&quot;</span> &gt; /etc/mysql/conf.d/mysql-init
</span><span class='line'>mysqld_safe --init-file<span class="o">=</span>/etc/mysql/conf.d/mysql-init <span class="p">&amp;</span>
</span><span class='line'><span class="c"># check password works</span>
</span><span class='line'><span class="c"># stop mysql </span>
</span><span class='line'>service start mysql
</span><span class='line'>rm /etc/mysql/conf.d/mysql-init
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Add Annotations to Grafana via Elasticsearch]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2015/04/27/add-annotations-to-grafana-via-elasticsearch/"/>
    <updated>2015-04-27T21:43:55+01:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2015/04/27/add-annotations-to-grafana-via-elasticsearch</id>
    <content type="html"><![CDATA[<p>It took me a while to figure out how to setup elasticsearch for grafana annotations, and I wanted a small page to allow me to add annotations</p>

<p>Mostly I figure we&rsquo;ll add a line to deploy scripts to track versions - but I&rsquo;d like to be able to manually annotate outages</p>

<div><script src='https://gist.github.com/29af780a56e09e3055ed.js?file=grafana-elasticsearch-annotations.html'></script>
<noscript><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js&quot;&gt;&lt;/script&gt;

&lt;script src=&quot;moment.min.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;moment-timezone.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;

$(document).ready(function(){
    $(&quot;#annotate&quot;).click(function(){
var stuff=JSON.stringify({
          &quot;when_it_happened&quot;: $(&quot;#when_it_happened&quot;).val(),
 &quot;title&quot; : $(&quot;#title&quot;).val(),
 &quot;description&quot; : $(&quot;#description&quot;).val(),
        });

        $.post(&quot;http://graphite.example.com:9200/events/prod/&quot;,
        stuff,
        function(data,status){
            alert(&quot;Data: &quot; + JSON.stringify(data) + &quot;\nStatus: &quot; + status);
        });
    });
});
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Add an annotation to grafana&lt;/h1&gt;

&lt;form&gt;
&lt;p&gt;&lt;label for=&quot;title&quot;&gt; Title &lt;input  id=&quot;title&quot; type=&quot;text&quot; /&gt;&lt;/label&gt;&lt;/p&gt;
&lt;p&gt;&lt;label for=&quot;description&quot;&gt; Description &lt;input  id=&quot;description&quot; type=&quot;text&quot; /&gt;&lt;/label&gt;&lt;/p&gt;
&lt;p&gt;&lt;label for=&quot;when_it_happened&quot;&gt; Date/time &lt;input  id=&quot;when_it_happened&quot; type=&quot;text&quot; /&gt;&lt;/label&gt; time is in UTC&lt;/p&gt;
&lt;p&gt;&lt;input id=&quot;annotate&quot; type=&quot;button&quot; value=&quot;Annotate!&quot; /&gt;&lt;/p&gt;
&lt;/form&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
var today = new Date();
var hour = today.getUTCHours();
if (hour &lt; 10) {
  hour = &quot;0&quot; + hour;
}
var minute = today.getUTCMinutes();
if (minute &lt; 10) {
  minute = &quot;0&quot; + minute;
}

//jQuery('#when_it_happened').datetimepicker({format:'Y-m-d\\TH:i:00.000\\Z', defaultTime : hour + ':' + minute });

var now = moment.tz('UTC').format('YYYY-MM-DD\\THH:mm:00.000\\Z');  
jQuery('#when_it_happened').val(now)
&lt;/script&gt;
&lt;p&gt;To setup the correct mapping on the server I run the following&lt;/p&gt;
 
&lt;pre&gt;
# delete all
curl -XDELETE  &quot;http://graphite.example.com:9200/events/&quot;
 
# create mapping
curl -XPUT graphite.example.com:9200/events -d '{
    &quot;settings&quot;: {
        &quot;index.number_of_shards&quot;: 1,
        &quot;index.number_of_replicas&quot;: 0
    },
    &quot;mappings&quot;: {
        &quot;prod&quot;: {
            &quot;_timestamp&quot;: {
                &quot;enabled&quot;: &quot;true&quot;
            },
            &quot;properties&quot;: {
                &quot;title&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;description&quot;: {
                  &quot;type&quot;: &quot;string&quot;
                },
                &quot;when_it_happened&quot;: {
                    &quot;type&quot;: &quot;date&quot;,
                    &quot;format&quot;: &quot;yyyy-MM-dd'&quot;'T'&quot;'HH:mm:ss.SSSZ&quot;
                }
            }
        }
    }
}
'
# test creating a record
curl -XPOST graphite.example.com:9200/events/prod/ -d '{
    &quot;when_it_happened&quot;: &quot;2015-04-27T18:30:14.000Z&quot;, &quot;title&quot; : &quot;fake deploy&quot;, &quot;description&quot; : &quot;Imagine that a deploy happened here&quot;
}
'

# check mapping
GET &quot;http://graphite.example.com:9200/events/_mapping?pretty=true&quot;

# test search
curl -XPOST  &quot;http://graphite.example.com:9200/events/_search?pretty=true&quot; -d '{&quot;fields&quot;:[&quot;when_it_happened&quot;],&quot;query&quot;:{&quot;filtered&quot;:{&quot;query&quot;:{&quot;bool&quot;:{&quot;should&quot;:[{&quot;query_string&quot;:{&quot;query&quot;:&quot;*&quot;}}]}},&quot;filter&quot;:{&quot;bool&quot;:{&quot;must&quot;:[{&quot;range&quot;:{&quot;when_it_happened&quot;:{&quot;from&quot;:&quot;now-8y&quot;,&quot;to&quot;:&quot;now+8y&quot;}}}]}}}},&quot;size&quot;:100}'

 
&lt;/pre&gt;
 
&lt;/body&gt;
&lt;/html&gt;

</code></pre></noscript></div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Stash Save Message]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2015/03/18/git-stash-save-message/"/>
    <updated>2015-03-18T14:36:59+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2015/03/18/git-stash-save-message</id>
    <content type="html"><![CDATA[<p>git stash is a great way to save work switch branch and then get back your half completed work from earlier</p>

<p>But I work on many projects, am often playing around with something, get pulled onto the next thing - and I often have stashed work kicking around</p>

<p>By default <code>git stash</code> saves the work but the <code>git list</code> just gives some id for each stash like</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>stash@{0}: WIP on master: 2166e26 foo
</span><span class='line'>stash@{1}: WIP on master: 2166e26 foo
</span><span class='line'>stash@{2}: WIP on master: 2166e26 foo
</span><span class='line'>stash@{3}: WIP on master: 2166e26 foo
</span><span class='line'>stash@{4}: WIP on master: 2166e26 foo</span></code></pre></td></tr></table></div></figure>


<p>better is to do</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git stash save <span class="s2">&quot;some description of the work&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then laster <code>git stash list</code> can tell you what each stash is</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>stash@<span class="o">{</span>0<span class="o">}</span>: On master: bufix <span class="c">#123</span>
</span><span class='line'>stash@<span class="o">{</span>1<span class="o">}</span>: On master: feature foo
</span><span class='line'>stash@<span class="o">{</span>2<span class="o">}</span>: On master: feature abc
</span><span class='line'>stash@<span class="o">{</span>3<span class="o">}</span>: On master: feature xyz
</span></code></pre></td></tr></table></div></figure>


<p>Much better for reminding me what these things were.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Puppet vs Ansible]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2015/03/13/puppet-vs-ansible/"/>
    <updated>2015-03-13T13:58:04+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2015/03/13/puppet-vs-ansible</id>
    <content type="html"><![CDATA[<p>Some thoughts - I&rsquo;ve used puppet for a while and ansible more recently.</p>

<p>Ansible is easier to get started with</p>

<p>Puppet sequencing can be hard - and occasionally you get bugs appearing in odd places where there was a dependency that you hadn&rsquo;t noticed - but things happened to work OK untill some change</p>

<p>Puppet is faster - especially for a long set of config with a single change to apply.</p>

<p>Much nicer audit trail pushing puppet code to a branch - nice having a branch per env, hiera allows easy separation of data and code</p>

<p>Puppet has good logs - which can show the diff of any config change and are easy to centralise.</p>

<p>Puppet requires software on the server and a service or cronjob, Ansible needs ssh and full sudo access: it doesn&rsquo;t run commands in quite the regular way and the only way to allow it to work seems to be to allow unrestricted sudo access (a password may be used)</p>

<p>I really don&rsquo;t like running ansible from a local dev env, too easy to run uncommitted code that others can&rsquo;t see, no central audit trail, and easy to accidentally use the wrong inventory and push chnages to teh wrong place</p>

<p>I get the impression that it is harder with puppet than with ansible to reuse code quite as well - I feel like I&rsquo;m going to be bitten by Ansible&rsquo;s strict sequencing - but so far it&rsquo;s OK</p>

<p>Ansible gives you the ability run run a multi-machine deploy which puppet doesn&rsquo;t (you&rsquo;d use mcollective for this)</p>

<p>Much richer ecosystem of puppet modules than ansible ones at the time of writing.</p>

<p>I haven&rsquo;t used ansible tower,</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSL Problems in Jmeter and Java 1.7]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2015/03/11/ssl-problems-in-jmeter-and-java-1-dot-7/"/>
    <updated>2015-03-11T22:10:36+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2015/03/11/ssl-problems-in-jmeter-and-java-1-dot-7</id>
    <content type="html"><![CDATA[<p>When using jmeter on an ssl enabled site I was seeing an error</p>

<pre><code>SSL handshake alert: unrecognized_name error
</code></pre>

<p>But I&rsquo;d read that since jmeter version 2.4 ssl should work fine</p>

<p>It turns out that Java 7 introduced a feature (SNI support) and can trigger this error in some circumstances.</p>

<p>As workaround you can disable this feature by setting the property  jsse.enableSNIExtension to false.</p>

<p>and run jmeter like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>jmeter -Djsse.enableSNIExtension<span class="o">=</span><span class="nb">false</span> -t mytest.jmx
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Local Yum Cache Repo]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2015/03/03/local-yum-cache-repo/"/>
    <updated>2015-03-03T21:17:31+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2015/03/03/local-yum-cache-repo</id>
    <content type="html"><![CDATA[<p>When I&rsquo;m working on ansible or docker with machine images that get rebuilt regularly it&rsquo;s a pain waiting for slow downloads</p>

<p>Also if I want to work on teh train</p>

<p>I&rsquo;m working on a process to setup a local repo with the stuff that I need</p>

<p>This script downloads the rpms I have installed</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum install yum-utils <span class="o">&amp;&amp;</span> sudo yumdownloader --destdir<span class="o">=</span>./ <span class="k">$(</span>rpm -qa --qf <span class="s2">&quot;%{NAME} &quot;</span><span class="k">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Next I need to drop them in a web dir, run createrepo and finally make sure this repo is enabled and prioritised in my test envs</p>

<p>Writing this part up now even though I haven&rsquo;t finished - as I don&rsquo;t want to loose this info.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Steps With Ansible and Docker]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2015/02/18/first-steps-with-ansible-and-docker/"/>
    <updated>2015-02-18T14:04:59+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2015/02/18/first-steps-with-ansible-and-docker</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been using puppet and vagrant for a while, due to client choices we&rsquo;re switching to ansible which I&rsquo;m less familiar with - and Docker has been on my to learn list for a while.</p>

<p>I love vagrant - being able to bring up a VM locally that matches the production servers to a good degree is just brilliant, and being able to repeat deploys is invaluable in testing process.</p>

<p>The limitation with VMs is that each one takes a lot of resources, and is slow to build.</p>

<p>Linux containers are <em>much</em> lighter weight - being faster to create and using much less system resource to run, I&rsquo;m hoping to be able to run more servers at once inside my laptop.</p>

<p>There is a nice quick demo of docker <a href="https://www.docker.com/tryit/">https://www.docker.com/tryit/</a></p>

<p>The steps below cover installing ansible and docker, building a simple docker image, and then using an ansible playbook to both create a container and then connect to that container. I just run a hello world at that point - but from there running any ansible code should be simple.</p>

<hr />

<p>On Ubuntu I installed the latest version via ppa following the notes from <a href="https://docs.docker.com/installation/ubuntulinux/">https://docs.docker.com/installation/ubuntulinux/</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># add the Docker repository key to your local keychain.</span>
</span><span class='line'>sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9
</span><span class='line'><span class="c"># Add the Docker repository to your apt sources list, update and install the lxc-docker package.</span>
</span><span class='line'><span class="c"># You may receive a warning that the package isn&#39;t trusted. Answer yes to continue installation.</span>
</span><span class='line'>
</span><span class='line'>sudo sh -c <span class="s2">&quot;echo deb https://get.docker.com/ubuntu docker main &gt; /etc/apt/sources.list.d/docker.list&quot;</span>
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install lxc-docker
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># To verify that everything has worked as expected:</span>
</span><span class='line'>
</span><span class='line'>sudo docker run -i -t ubuntu /bin/bash
</span></code></pre></td></tr></table></div></figure>


<p>I also installed docker-py <a href="https://github.com/docker/docker-py">https://github.com/docker/docker-py</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo pip install docker-py
</span></code></pre></td></tr></table></div></figure>


<p>This is required for the docker module in ansible which allows running docker commands from an ansible playbook, I probably don&rsquo;t need this right away - but later I want to be able to manage multiple docker containers on remote servers.</p>

<p>I installed ansible from git, following the instructions at <a href="http://docs.ansible.com/intro_installation.html#getting-ansible">http://docs.ansible.com/intro_installation.html#getting-ansible</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone git://github.com/ansible/ansible.git --recursive
</span><span class='line'><span class="nb">cd</span> ./ansible
</span><span class='line'><span class="nb">source</span> ./hacking/env-setup
</span><span class='line'>
</span><span class='line'><span class="c">#Ansible also uses the following Python modules that need to be installed:</span>
</span><span class='line'>
</span><span class='line'>sudo pip install paramiko PyYAML Jinja2 httplib2
</span></code></pre></td></tr></table></div></figure>


<p>Setup an Inventory file</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">echo</span> <span class="s2">&quot;localhost ansible_connection=local&quot;</span> &gt; ~/ansible_hosts
</span><span class='line'><span class="nb">export </span><span class="nv">ANSIBLE_HOSTS</span><span class="o">=</span>~/ansible_hosts
</span></code></pre></td></tr></table></div></figure>


<p>test with a ping command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ansible all -m ping
</span></code></pre></td></tr></table></div></figure>


<p>Those last steps are a slight variation on the official docs as I didn&rsquo;t want to use ssh locally - preferring the local connection which doesn&rsquo;t need passwords or keys to work, I&rsquo;ll come to that later.</p>

<p>I created a Dockerfile which builds me a base image that just has</p>

<ul>
<li>sshd running</li>
<li>the ssh port exposed</li>
<li>ansible user added</li>
<li>passwordless sudo for ansible user</li>
<li>an authorised key for ansible user</li>
</ul>


<p>The file is</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='Dockerfile'><span class='line'><span class="c"># base</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># VERSION               0.0.1</span>
</span><span class='line'>
</span><span class='line'><span class="k">FROM</span> centos:6
</span><span class='line'><span class="k">MAINTAINER</span> Sean Burlington &lt;sean@practicalweb.co.uk&gt;
</span><span class='line'>
</span><span class='line'><span class="c"># setup sshd,  ensuring it runs through regular configs once - this does some initial setup</span>
</span><span class='line'><span class="k">RUN</span> yum -y update <span class="o">&amp;&amp;</span> yum -y install openssh-server
</span><span class='line'><span class="k">RUN</span> service sshd start <span class="o">&amp;&amp;</span> service sshd stop
</span><span class='line'>
</span><span class='line'><span class="c"># create ansible user with sudo and public key</span>
</span><span class='line'><span class="k">RUN</span> yum -y install sudo
</span><span class='line'><span class="k">RUN</span> useradd ansible
</span><span class='line'><span class="k">RUN</span> <span class="nb">echo</span> <span class="s1">&#39;ansible:D\N5Vlucg7,JlUhiDb&lt;N&#39;</span> <span class="p">|</span> chpasswd
</span><span class='line'><span class="k">ADD</span> etc/sudoers/ansible /etc/sudoers.d/
</span><span class='line'><span class="k">RUN</span> mkdir -p /home/ansible/.ssh/
</span><span class='line'><span class="k">ADD</span> home/ansible/.ssh/authorized_keys /home/ansible/.ssh/
</span><span class='line'><span class="k">RUN</span> chown -R ansible:ansible /home/ansible/ <span class="o">&amp;&amp;</span> chmod <span class="m">700</span> /home/ansible/.ssh/ <span class="o">&amp;&amp;</span> chmod <span class="m">600</span> /home/ansible/.ssh/authorized_keys
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># set example env variable that will be visible in users shell</span>
</span><span class='line'><span class="k">RUN</span> <span class="nb">echo</span> <span class="s2">&quot;export VISIBLE=now&quot;</span> &gt;&gt; /etc/profile
</span><span class='line'>
</span><span class='line'><span class="c"># run sshd and expose it </span>
</span><span class='line'><span class="k">EXPOSE</span> <span class="m">22</span>
</span><span class='line'><span class="k">CMD</span> <span class="o">[</span><span class="s2">&quot;/usr/sbin/sshd&quot;</span>, <span class="s2">&quot;-D&quot;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>get this file and supporting code by</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone https://github.com/practicalweb/docker-ansible.git
</span><span class='line'><span class="nb">cd </span>docker-ansible
</span></code></pre></td></tr></table></div></figure>


<p>Note that I don&rsquo;t include my public key there (it is gitignored)</p>

<p>copy your by something like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cp ~/.ssh/id_rsa.pub base-docker/home/ansible/.ssh/authorized_keys
</span></code></pre></td></tr></table></div></figure>


<p>build the image</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo docker build -t base base-docker/
</span></code></pre></td></tr></table></div></figure>


<p>I wrote a playbook that creates a container from the image, adds this host to the ansible inventory and then runs an ansible command to it</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='YAML'><span class='line'><span class="c1"># Docker / ansible hello world</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># Create a a docker container on localhost (this has an ssh server in the image)</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">localhost</span>
</span><span class='line'>  <span class="l-Scalar-Plain">sudo</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">start container</span>
</span><span class='line'>    <span class="l-Scalar-Plain">docker</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">image=base hostname=test name=test detach=False</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># add container(s) to the hosts inventory</span>
</span><span class='line'>  <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">add new hosts to inventory</span>
</span><span class='line'>    <span class="l-Scalar-Plain">add_host</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">hostname=&quot;&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">groups=docker</span>
</span><span class='line'>      <span class="l-Scalar-Plain">ansible_ssh_host=&quot;&quot;</span>
</span><span class='line'>      <span class="l-Scalar-Plain">ansible_ssh_port=22</span>
</span><span class='line'>    <span class="l-Scalar-Plain">when</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">item.State.Running == True</span>
</span><span class='line'>    <span class="l-Scalar-Plain">with_items</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">docker_containers</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># Now we can run ansible on the dockers container(s)</span>
</span><span class='line'><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">hosts</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">docker</span>
</span><span class='line'>  <span class="l-Scalar-Plain">sudo</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">yes</span>
</span><span class='line'>  <span class="l-Scalar-Plain">remote_user</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ansible</span>
</span><span class='line'>  <span class="l-Scalar-Plain">tasks</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">hello</span>
</span><span class='line'>      <span class="l-Scalar-Plain">shell</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">echo &quot;hello world&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>run it like</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">export </span><span class="nv">ANSIBLE_HOST_KEY_CHECKING</span><span class="o">=</span>False
</span><span class='line'>ansible-playbook  --ask-sudo-pass docker1.playbook
</span></code></pre></td></tr></table></div></figure>


<p>I turn off host key checking since this is a new host and will always fail</p>

<p>To clean up after creating containers - or you end up with lots of mess&hellip;</p>

<p>To stop all docker containers</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo docker stop <span class="k">$(</span>sudo docker ps -a -q<span class="k">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>To remove all docker containers</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo docker rm <span class="k">$(</span>sudo docker ps -a -q<span class="k">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Well now I can build a base image, create an instance of it as a container, and run ansible there.</p>

<p>Next steps are to run a more meaningful ansible playbook to setup my applications, and to link containers together so that apps can connect.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu Disk Encryption Password]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2015/02/17/ubuntu-disk-encryption-password/"/>
    <updated>2015-02-17T18:50:37+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2015/02/17/ubuntu-disk-encryption-password</id>
    <content type="html"><![CDATA[<p>To reset the password on an encrypted disk in Ubuntu use the disks tool</p>

<p>The cogs icon for the partition has a change password option</p>

<p><img src="http://www.practicalweb.co.uk/images/posts/ubuntu-disk-envryption-password.png" alt="screenshot" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Integration Branch Based Workflow]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2015/02/16/git-integration-branch-based-workflow/"/>
    <updated>2015-02-16T16:53:30+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2015/02/16/git-integration-branch-based-workflow</id>
    <content type="html"><![CDATA[<p>The branching strategy I&rsquo;ve found most effective and flexible is to use one branch per release version that is used for integration and feature branches off these for everything else.</p>

<p>It&rsquo;s hard to visualise and I&rsquo;ve tried drawing graphs but once I build in enough features to make the graph meaningful it is no longer easy to interpret.</p>

<p>At the end of the day there is a degree of complexity in a branching process suited to large teams and large projects - but it does come down to a few basic principles.</p>

<p>If you follow these principles you can maintain maximum release readiness, minimise conflicts, maximise flexibility, minimise bugs.</p>

<p>At the end of the day the goal is to try and make life easier for both the development team and the business team while delivering as much functionality as possible.</p>

<h2>1 Each release has an Integration branch</h2>

<p>When we start work on a new version the first thing we do is create a new integration branch based on the latest version of the previous release&rsquo;s integration branch.</p>

<p>Releases are made from tags on this branch, no code gets merged to the integration branch until it has passed initial testing.</p>

<p>In theory the integration branch is always release ready - in real life we find some bugs later than we&rsquo;d like, also sometimes we integrate early when we know a release is still a way off.</p>

<h2>2 Every feature or bugfix has a branch</h2>

<p>Developers (almost) never work directly on the integration branch but create a branch for very change from the earliest integration branch this change might be merged back into.</p>

<h2>3 Merge forwards</h2>

<p>Newer integration branches are forks of older integration branches so merging changes made to version x into version x+1 (or x+2 etc) will usually be trivial.</p>

<p>Feature branches are forks of integration branches - again this makes merging the integration code to the feature usually trivial.</p>

<p>I say the merge is usually trivial - occasionally two changes will have a conflict - for example if two developers have edited the same line in different ways. But by maintaining a branch hierarchy and merging frequently these conflicts are amazingly rare. Even when they do happen they will involve recently edited code which makes understanding the conflict much easier.</p>

<p>The thing that git is really really good at is merging two branches with a shared history.</p>

<p>If you do find you make a fix from a later integration branch (maybe you make a bugfix which you only later realise affects older releases too) then you may need to cherry pick commits back to an older branch - but this should be the exception.</p>

<h2>4 Work in the oldest branch you can</h2>

<p>If you don&rsquo;t know for sure which release a feature will be in start it from the oldest one it might be in - since integration branches share heritage you can</p>

<p>You can always merge a feature branch to a later integration branch (since the later integration branch contains the older one). But the reverse is tricky and you would need to cherry pick.</p>

<h2>5 Always merge the Integration branch to the feature branch before merging a feature</h2>

<p>Before merging a feature to the integration branch we first make sure that the feature branch has all the latest code for that release, then we test it.</p>

<p>This avoids the risk that our code works OK in isolation but conflicts in some way with another feature that was merged to integration after we started work.</p>

<p>It means that we will deal with any conflicts in the feature branch and that merging to integration will always be a simple fast forward merge with no conflicts.</p>

<h2>6 Never commit what you can build</h2>

<p>Don&rsquo;t put binary files or things like minified css/js in git, also don&rsquo;t commit version numbers. These sorts of files tend to change in multiple branches at once and are very prone to generating conflicts.</p>

<p>The better solution is to have a build script that pulls in any binaries needed from a separate store, builds minified  versions of files, does any compilation etc.</p>

<p>The build script could take the release number as a parameter or read it from a git tag and insert the version number into whatever file is needed.</p>

<h3>Side note on rebasing/squashing commits on feature branches</h3>

<p>Take a look at google <a href="https://www.google.co.uk/webhp?q=git+to+squash+or+not+to+squash">https://www.google.co.uk/webhp?q=git+to+squash+or+not+to+squash</a></p>

<p>There are a lot of opinions out there on whether or not to squash commits before merging a feature branch</p>

<p>Personally I prefer when people don&rsquo;t because I find that when they do the commit messages are quite terse &ldquo;added feature foo&rdquo;</p>

<p>I prefer to see the individual commits, and which lines were written at 5:30 on a Friday night when maybe someone was in a hurry to get home.</p>

<p>But if people do rebase then doing this on their feature branch just before merging to integration is a good time to do it.</p>

<p>Never rebase on integration.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ELK Gotchas]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2015/01/16/elk-gotchas/"/>
    <updated>2015-01-16T19:49:03+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2015/01/16/elk-gotchas</id>
    <content type="html"><![CDATA[<p>Syslog import takes curent year - and I can&rsquo;t seem to set that (it&rsquo;s early january I&rsquo;m working on logs that include the end of December)</p>

<p>Even adding a year to the log data in sed didn&rsquo;t seem to help</p>

<p>Selecting time periods via histogram I had inadvertantly setup conflicting time periods or times outside of my data - if &ldquo;filtering&rdquo; is collapsed it&rsquo;s very easy for the dashboard to have a filter that leaves no data shown and as a beginner not realise it</p>

<p>Histogram panel view - exposes an \interval\ setting that was wrong in my case (set to an interval of a year which wasn&rsquo;t useful for a few days worth of data)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Non-root Packet Capture in Wireshark]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2014/12/03/non-root-packet-capture-in-wireshark/"/>
    <updated>2014-12-03T12:04:46+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2014/12/03/non-root-packet-capture-in-wireshark</id>
    <content type="html"><![CDATA[<p>There are lots of blogs about this already - but I didn&rsquo;t quite understand at first so here&rsquo;s my take &hellip;</p>

<p>Wireshark is a large and somewhat vulnerable program - best not to run it as root (especially as you may be looking a suspicious traffic)</p>

<p>It uses dumpcap for the actual packet capture which is the only bit that needs elevated privileges.</p>

<p>Since linux kernel 2.2 we don&rsquo;t even need root for this bit - we can set file permissions to allow non root user to capture packets.</p>

<p>If you don&rsquo;t want to allow just any user on your system to do this first make sure only a chosen group can even run dumpcap</p>

<p>I decided to use the sudo group - but you could make a new one.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo chgrp sudo /usr/bin/dumpcap
</span><span class='line'>sudo chmod <span class="m">750</span> /usr/bin/dumpcap
</span></code></pre></td></tr></table></div></figure>


<p>Now only members of the sudo group (who are already the users I trust) can run this program.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sudo setcap cap_net_raw,cap_net_admin<span class="o">=</span>eip /usr/bin/dumpcap
</span></code></pre></td></tr></table></div></figure>


<p>This allows the program to gain elevated network rights without being run by root.</p>

<p>Note that any chmod action seems to undo the setcap so perform the changes in this order.</p>

<p>Now I can run wireshark as my regular user and have full functionality.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Specifying MTU for a VPN Connection in NetworkManager]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2014/12/03/specifying-mtu-for-a-vpn-connection-in-networkmanager/"/>
    <updated>2014-12-03T11:34:35+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2014/12/03/specifying-mtu-for-a-vpn-connection-in-networkmanager</id>
    <content type="html"><![CDATA[<p>I need to use a VPN which was suffering packet fragmentation due to the overhead involved (actually I use a VPN to connect to a network which then has another VPN connection to a third network).</p>

<p>To determine the largest MTU size which didn&rsquo;t lead to fragmentation I just ran variations on</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ping -M <span class="k">do</span> -s <span class="m">1327</span> server.example.com
</span></code></pre></td></tr></table></div></figure>


<p><code>-M do</code> prohibits fragmentation so the ping will fail if the packet size is too large</p>

<p>I tried larger/ smaller values till I found the largest number that worked.</p>

<p>Network Manager didn&rsquo;t give me a GUI to set MTU on the VPN connection (it does for ethernet)</p>

<p>So I needed a script in /etc/network/if-up.d/</p>

<p>I called mine like myvpn-mtu (owned by root and executable)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#! /bin/sh</span>
</span><span class='line'><span class="c"># set low MTU for my VPN otherwise I get packet fragmentation</span>
</span><span class='line'><span class="nb">set</span> -e
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> <span class="s2">&quot;$CONNECTION_ID&quot;</span> <span class="o">=</span> myvpn <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="o">[</span> <span class="s2">&quot;$MODE&quot;</span> <span class="o">=</span> start <span class="o">]</span><span class="p">;</span> <span class="k">then</span>
</span><span class='line'>  /sbin/ifconfig <span class="nv">$IFACE</span> mtu 1327
</span><span class='line'><span class="k">fi</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="nb">exit </span>0
</span></code></pre></td></tr></table></div></figure>


<p>Substitute &ldquo;myvpn&rdquo; here for your connection name</p>

<p>The script env has the following variables (I&rsquo;ve anonymised some variables)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">ADDRFAM</span><span class="o">=</span>NetworkManager
</span><span class='line'><span class="nv">CONNECTION_ID</span><span class="o">=</span>xxxxxxxxxxxxxx
</span><span class='line'><span class="nv">CONNECTION_UUID</span><span class="o">=</span>xxxxxxx-xxxxx-xxxxx-xxxx-xxxxx
</span><span class='line'><span class="nv">DEVICE_IFACE</span><span class="o">=</span>wlan0
</span><span class='line'><span class="nv">DEVICE_IP_IFACE</span><span class="o">=</span>wlan0
</span><span class='line'><span class="nv">DHCP4_BROADCAST_ADDRESS</span><span class="o">=</span>192.168.0.255
</span><span class='line'><span class="nv">DHCP4_DHCP_LEASE_TIME</span><span class="o">=</span>86400
</span><span class='line'><span class="nv">DHCP4_DHCP_MESSAGE_TYPE</span><span class="o">=</span>5
</span><span class='line'><span class="nv">DHCP4_DHCP_REBINDING_TIME</span><span class="o">=</span>75600
</span><span class='line'><span class="nv">DHCP4_DHCP_RENEWAL_TIME</span><span class="o">=</span>43200
</span><span class='line'><span class="nv">DHCP4_DHCP_SERVER_IDENTIFIER</span><span class="o">=</span>192.168.0.1
</span><span class='line'><span class="nv">DHCP4_DOMAIN_NAME</span><span class="o">=</span>xxx
</span><span class='line'><span class="nv">DHCP4_DOMAIN_NAME_SERVERS</span><span class="o">=</span>192.168.0.1
</span><span class='line'><span class="nv">DHCP4_EXPIRY</span><span class="o">=</span>1417685250
</span><span class='line'><span class="nv">DHCP4_HOST_NAME</span><span class="o">=</span>xxx
</span><span class='line'><span class="nv">DHCP4_IP_ADDRESS</span><span class="o">=</span>192.168.0.209
</span><span class='line'><span class="nv">DHCP4_NETWORK_NUMBER</span><span class="o">=</span>192.168.0.0
</span><span class='line'><span class="nv">DHCP4_ROUTERS</span><span class="o">=</span>192.168.0.1
</span><span class='line'><span class="nv">DHCP4_SUBNET_MASK</span><span class="o">=</span>255.255.255.0
</span><span class='line'><span class="nv">IFACE</span><span class="o">=</span>tun0
</span><span class='line'><span class="nv">IP4_ADDRESS_0</span><span class="o">=</span>192.168.0.209/24 192.168.0.1
</span><span class='line'><span class="nv">IP4_DOMAINS</span><span class="o">=</span>xxx
</span><span class='line'><span class="nv">IP4_NAMESERVERS</span><span class="o">=</span>192.168.0.1
</span><span class='line'><span class="nv">IP4_NUM_ADDRESSES</span><span class="o">=</span>1
</span><span class='line'><span class="nv">IP4_NUM_ROUTES</span><span class="o">=</span>0
</span><span class='line'><span class="nv">LOGICAL</span><span class="o">=</span>tun0
</span><span class='line'><span class="nv">METHOD</span><span class="o">=</span>NetworkManager
</span><span class='line'><span class="nv">MODE</span><span class="o">=</span>start
</span><span class='line'><span class="nv">PHASE</span><span class="o">=</span>post-up
</span><span class='line'><span class="nv">PWD</span><span class="o">=</span>/
</span><span class='line'><span class="nv">VERBOSITY</span><span class="o">=</span>0
</span><span class='line'><span class="nv">VPN_IP4_ADDRESS_0</span><span class="o">=</span>192.168.1.48/24 x.x.x.x
</span><span class='line'><span class="nv">VPN_IP4_NAMESERVERS</span><span class="o">=</span>x.x.x.x
</span><span class='line'><span class="nv">VPN_IP4_NUM_ADDRESSES</span><span class="o">=</span>1
</span><span class='line'><span class="nv">VPN_IP4_NUM_ROUTES</span><span class="o">=</span>28
</span><span class='line'><span class="nv">VPN_IP4_ROUTE_0</span><span class="o">=</span>192.168.1.0/24 0.0.0.0 0
</span><span class='line'><span class="nv">VPN_IP4_ROUTE_1</span><span class="o">=</span>192.168.2.0/24 0.0.0.0 0
</span><span class='line'><span class="nv">VPN_IP4_ROUTE_2</span><span class="o">=</span>192.168.3.0/24 0.0.0.0 0
</span><span class='line'><span class="nv">VPN_IP4_ROUTE_3</span><span class="o">=</span>192.168.4.0/24 0.0.0.0 0
</span><span class='line'><span class="nv">VPN_IP_IFACE</span><span class="o">=</span>tun0
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Import Data to Graphite From Munin]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2014/11/28/import-data-to-graphite-from-munin/"/>
    <updated>2014-11-28T18:26:44+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2014/11/28/import-data-to-graphite-from-munin</id>
    <content type="html"><![CDATA[<p>To convert data from munin/rrd to graphite/whisper you need to use the <code>rrdwhisper</code> tool which in centos is part of the python-whisper package.</p>

<p>If you want to change the data retention/resolution properties in graphite you will also need to resize the files as well.</p>

<p>Note that Graphites reads from /etc/carbon/storage-aggregation.conf and /etc/carbon/storage-schemas.conf to select the retention and aggregation policies for <em>new</em> data, but since these are set in the file at creation time editing the config file has no effect on existing files (or those created with whisper2rrd).</p>

<p>Recent data is stored at 10 second intervals, when it becomes older 6 lots of 10 second data get aggregated to make a one minute interval. I think this aggregation also happens on newer data if I select say data for the last 2 days since this time period include data at the lower resolution - all the data I get is at this lower resolution.</p>

<p>When this data is aggregated it can be averaged; in my case I&rsquo;m measuring how long something takes - and average is right. But say I was counting something then I&rsquo;d want to know the total over a minute - sum - not average, and if I was recording peaks then I&rsquo;d want the max.</p>

<p>The xFilesFactor as I understand it tells graphite to ignore all the data for an interval if there are too many nulls, but since my original data is at a lower resolution I have loads of nulls and don&rsquo;t want to ignore anything - so I&rsquo;m setting this to zero and my import seems to work well at different scales and on both old and new data.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="k">for</span> rrd in *rrd <span class="p">;</span> <span class="k">do</span>
</span><span class='line'>    rrd2whisper --xFilesFactor<span class="o">=</span>0.0 --aggregationMethod<span class="o">=</span>average <span class="nv">$rrd</span>
</span><span class='line'>    whisper-resize  --xFilesFactor<span class="o">=</span>0.0 --aggregationMethod<span class="o">=</span>average --nobackup <span class="k">${</span><span class="nv">rrd</span><span class="p">%.rrd</span><span class="k">}</span>_42.wsp   10s:6h 1min:6d 10min:1800d
</span><span class='line'><span class="k">done</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">[</span> -d /var/lib/carbon/whisper/munin <span class="o">]</span> <span class="o">||</span> sudo -u carbon mkdir -p /var/lib/carbon/whisper/munin
</span><span class='line'>sudo mv *wsp /var/lib/carbon/whisper/munin
</span><span class='line'>sudo chown -R carbon:carbon  /var/lib/carbon/whisper/munin
</span></code></pre></td></tr></table></div></figure>


<p>This script excerpt deals with the basic conversion - I also needed to convert the long filenames munin used to a nested directory structure used by graphite.</p>

<p>That conversion will depend on your use case - if you look at the files stored under /var/lib/carbon/whisper and /var/lib/munin you should be able to see the pattern.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Log From Jmeter to Statsd]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2014/11/25/how-to-log-from-jmeter-to-statsd/"/>
    <updated>2014-11-25T19:57:40+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2014/11/25/how-to-log-from-jmeter-to-statsd</id>
    <content type="html"><![CDATA[<p>In order to log from Jmeter to statsd you need to add <a href="https://github.com/tim-group/java-statsd-client/releases/download/v3.0.1/java-statsd-client-3.0.1.jar">a statsd library</a> to the jmeter /lib path</p>

<p>Then have a beanshell on the thread group setup a statsd object for use by the threads</p>

<p>store this in the props variable - JMeterProperties (class java.util.Properties)</p>

<p>Note that <a href="https://docs.oracle.com/javase/7/docs/api/java/util/Properties.html">the docs</a> say</p>

<blockquote><p>Because Properties inherits from Hashtable, the put and putAll methods can be applied to a Properties object. Their use is strongly discouraged as they allow the caller to insert entries whose keys or values are not Strings. The setProperty method should be used instead. If the store or save method is called on a &ldquo;compromised&rdquo; Properties object that contains a non-String key or value, the call will fail. Similarly, the call to the propertyNames or list method will fail if it is called on a &ldquo;compromised&rdquo; Properties object that contains a non-String key.</p></blockquote>

<p>However I didn&rsquo;t find a better place to put the statsd object yet since the ctx variable is thread specific</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">com.timgroup.statsd.StatsDClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.timgroup.statsd.NonBlockingStatsDClient</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">StatsDClient</span> <span class="n">statsd</span> <span class="o">=</span> <span class="k">new</span> <span class="nf">NonBlockingStatsDClient</span><span class="o">(</span><span class="s">&quot;jmeter.test&quot;</span><span class="o">,</span> <span class="s">&quot;statsd.exapmle.com&quot;</span><span class="o">,</span> <span class="mi">8125</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">props</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">&quot;statsd&quot;</span><span class="o">,</span> <span class="n">statsd</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now on the Sampler you want to record data for add a beanshell post processor</p>

<p>You can retrieve the statsd connection from the props variable, and obtain the request time taken from the prev variable which is a org.apache.jmeter.samplers.SampleResult</p>

<p>Once we have the pieces together logging the request time to statsd is simple</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kn">import</span> <span class="nn">com.timgroup.statsd.StatsDClient</span><span class="o">;</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">com.timgroup.statsd.NonBlockingStatsDClient</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">StatsDClient</span> <span class="n">statsd</span> <span class="o">=</span> <span class="o">(</span><span class="n">StatsDClient</span><span class="o">)</span> <span class="n">props</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;statsd&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">statsd</span><span class="o">.</span><span class="na">recordExecutionTime</span><span class="o">(</span><span class="s">&quot;loadtime&quot;</span><span class="o">,</span> <span class="n">prev</span><span class="o">.</span><span class="na">getTime</span><span class="o">());</span>
</span></code></pre></td></tr></table></div></figure>


<p>I&rsquo;ve put an example test plan on github <a href="https://github.com/practicalweb/jmeter-statsd-demo">https://github.com/practicalweb/jmeter-statsd-demo</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Debugging With Maven and Eclipse]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2014/11/19/debugging-with-maven-and-eclipse/"/>
    <updated>2014-11-19T16:11:44+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2014/11/19/debugging-with-maven-and-eclipse</id>
    <content type="html"><![CDATA[<p>To use eclipse with Maven you need to add the maven plugin to eclipse, it seems to be part of the Indigo update site so this should be straightforward.</p>

<p>It&rsquo;s also at <a href="http://download.eclipse.org/technology/m2e/releases">http://download.eclipse.org/technology/m2e/releases</a></p>

<p>More instructions at <a href="http://maven.apache.org/guides/mini/guide-ide-eclipse.html">http://maven.apache.org/guides/mini/guide-ide-eclipse.html</a></p>

<p>To run the debugger you need to do two things: you need to tell maven to run surefire, and run a remote java debug listening to that surefire</p>

<p>Setup a new &ldquo;Debug configuration&rdquo; > &ldquo;Remote Java Application&rdquo;</p>

<p>It should look like</p>

<p><img src="http://www.practicalweb.co.uk/images/eclipse/maven/surefire.png" alt="screenshot" /></p>

<p>Next you need to run your maven code with the -Dmaven.surefire.debug</p>

<p>You can do this by adding it to the debug config like this</p>

<p><img src="http://www.practicalweb.co.uk/images/eclipse/maven/main-project.png" alt="screenshot" /></p>

<p>I&rsquo;ve used the debug mode - but maybe a run configuration would work too</p>

<p>An alternative is to run the maven project on command line</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mvn <span class="nb">test</span> -Dmaven.surefire.debug
</span></code></pre></td></tr></table></div></figure>


<p>Generally if I&rsquo;m using eclipse I prefer to do everything in the IDE (I stands for integrated after all) and it&rsquo;s useful to have the console output in the same place</p>

<p>Either way run the project to debug and maven will stop with output</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Listening <span class="k">for</span> transport dt_socket at address: 5005
</span></code></pre></td></tr></table></div></figure>


<p>and wait till your debugger is attached</p>

<p>Now you have to start the remote application debug in eclipse</p>

<p>Execution will now stop at breakpoints and you will be able top explore the stack and all variables set</p>

<p><img src="http://www.practicalweb.co.uk/images/eclipse/maven/debug.png" alt="screenshot" /></p>

<p>This is an incredibly powerful way to explore running code, <em>especially</em> if you are unfamiliar with it. Even if you are familiar a debugger session can often be very enlightening.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Graphite Statsd/bucky and Collectd]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2014/11/19/graphite-statsd-slash-bucky-and-collectd/"/>
    <updated>2014-11-19T10:09:23+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2014/11/19/graphite-statsd-slash-bucky-and-collectd</id>
    <content type="html"><![CDATA[<blockquote><p>Graphite is a highly scalable real-time graphing system.</p></blockquote>

<p>It took me a while to realise but the data input to graphite is <em>incredibly</em> simple</p>

<p>The message input format is just</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>metric_path value timestamp\n
</span><span class='line'>
</span><span class='line'>So for example, "foo.bar.baz 42 74857843"</span></code></pre></td></tr></table></div></figure>


<p>Wow: just a label the number you want to store and the timestamp it relates to.</p>

<p>That&rsquo;s really basic, there is nothing there about what kind of data it is, no difference between something you want to count (say page hits) and a number you want to average (like load)</p>

<p><a href="https://github.com/etsy/statsd/blob/master/docs/graphite.md">Configuring Graphite for StatsD</a> is a <em>very</em> important doc to read if you want to use these tools together.</p>

<p>The default config in graphite keeps data at 1 minute resolution for 1 day <strong>and then discards it</strong> and if you are sending data to graphite every 10 seconds graphite has to figure out how to convert 6 data points (or some nulls and some data) to 1 data point for the minute.</p>

<p>You really need the statsd specific config to ensure counts are not averaged and infrequent data is not dropped.</p>

<p>I needed to install on Centos using just official and EPEL packages, I wanted to use collected to gather system metrics and while version 5 can log direct to graphite version 4 ships with Centos 6.5 and that can&rsquo;t log direct.</p>

<p>In any case I wanted to use statsd to allow easy logging of custom data from production code, the original written by etsy is a node service and probably doesn&rsquo;t run with stock packages on Centos,</p>

<p>Centos does provide a python-bucky package which acts both as a statsd server and as a bridge to collectd.</p>

<p>The full list of packages I needed is</p>

<ul>
<li>graphite-web</li>
<li>graphite-web-selinux</li>
<li>python-carbon</li>
<li>python-whisper</li>
<li>collectd</li>
<li>python-bucky</li>
</ul>


<p>Apache config</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'><span class="nt">&lt;VirtualHost</span> <span class="s">*:80</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nb">ServerName</span> graphite.example.com
</span><span class='line'>
</span><span class='line'>  <span class="c">## Vhost docroot</span>
</span><span class='line'>  <span class="nb">DocumentRoot</span> <span class="s2">&quot;/var/www/html&quot;</span>
</span><span class='line'>  <span class="c">## Alias declarations for resources outside the DocumentRoot</span>
</span><span class='line'>  <span class="nb">Alias</span> <span class="sx">/grafana/</span> <span class="s2">&quot;/var/www/grafana/&quot;</span>
</span><span class='line'>  <span class="nb">Alias</span> <span class="sx">/media/</span> <span class="s2">&quot;/usr/lib/python2.6/site-packages/django/contrib/admin/media/&quot;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="c">## Directories, there should at least be a declaration for /var/www/html</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;Directory</span> <span class="s">&quot;/var/www/html&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nb">Options</span> Indexes FollowSymLinks MultiViews
</span><span class='line'>    <span class="nb">AllowOverride</span> <span class="k">None</span>
</span><span class='line'>    <span class="nb">Order</span> allow,deny
</span><span class='line'>    <span class="nb">Allow</span> from <span class="k">all</span>
</span><span class='line'>  <span class="nt">&lt;/Directory&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">## Load additional static includes</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="c">## Logging</span>
</span><span class='line'>  <span class="nb">ErrorLog</span> <span class="s2">&quot;/var/log/httpd/graphite.example.com_error.log&quot;</span>
</span><span class='line'>  <span class="nb">ServerSignature</span> <span class="k">Off</span>
</span><span class='line'>  <span class="nb">CustomLog</span> <span class="s2">&quot;/var/log/httpd/graphite.example.com_access.log&quot;</span> combined
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="nb">WSGIImportScript</span> <span class="sx">/usr/share/graphite/graphite-web.wsgi</span> application-group=%{GLOBAL} process-group=%{GLOBAL}
</span><span class='line'>  <span class="nb">WSGIScriptAlias</span> / <span class="s2">&quot;/usr/share/graphite/graphite-web.wsgi&quot;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c">## Custom fragment</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;Location</span> <span class="s">&quot;/content/&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nb">SetHandler</span> <span class="k">None</span>
</span><span class='line'>    <span class="nt">&lt;/Location&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nt">&lt;Location</span> <span class="s">&quot;/media/&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nb">SetHandler</span> <span class="k">None</span>
</span><span class='line'>    <span class="nt">&lt;/Location&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/VirtualHost&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Graphite Config</p>

<p>Storage-schames.conf</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'><span class="err">[carbon]</span>
</span><span class='line'><span class="nb">pattern</span> = ^carbon\.
</span><span class='line'><span class="nb">retentions</span> = <span class="m">60</span>:90d
</span><span class='line'>
</span><span class='line'><span class="err">[stats]</span>
</span><span class='line'><span class="nb">pattern</span> = ^stats.*
</span><span class='line'><span class="nb">retentions</span> = <span class="m">10</span>s:6h,1min:6d,10min:1800d
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># unsure if this is redundant - does .* match stats_counts ?</span>
</span><span class='line'><span class="err">[stats_counts]</span>
</span><span class='line'><span class="nb">pattern</span> = ^stats_counts.*
</span><span class='line'><span class="nb">retentions</span> = <span class="m">10</span>s:6h,1min:6d,10min:1800d
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c"># collectd </span>
</span><span class='line'><span class="err">[com]</span>
</span><span class='line'><span class="nb">pattern</span> = ^com.*
</span><span class='line'><span class="nb">retentions</span> = <span class="m">10</span>s:6h,1min:6d,10min:1800d
</span><span class='line'>
</span><span class='line'><span class="err">[default_1min_for_1day]</span>
</span><span class='line'><span class="nb">pattern</span> = .*
</span><span class='line'><span class="nb">retentions</span> = <span class="m">60</span>s:1d
</span></code></pre></td></tr></table></div></figure>


<p>storage-aggregation.conf</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='apache'><span class='line'><span class="err">[min]</span>
</span><span class='line'><span class="nb">pattern</span> = \.lower$
</span><span class='line'><span class="nb">xFilesFactor</span> = <span class="m">0</span>.1
</span><span class='line'><span class="nb">aggregationMethod</span> = <span class="k">min</span>
</span><span class='line'>
</span><span class='line'><span class="err">[max]</span>
</span><span class='line'><span class="nb">pattern</span> = \.upper(_\d+)?$
</span><span class='line'><span class="nb">xFilesFactor</span> = <span class="m">0</span>.1
</span><span class='line'><span class="nb">aggregationMethod</span> = max
</span><span class='line'>
</span><span class='line'><span class="err">[sum]</span>
</span><span class='line'><span class="nb">pattern</span> = \.sum$
</span><span class='line'><span class="nb">xFilesFactor</span> = <span class="m">0</span>
</span><span class='line'><span class="nb">aggregationMethod</span> = sum
</span><span class='line'>
</span><span class='line'><span class="err">[count]</span>
</span><span class='line'><span class="nb">pattern</span> = \.count$
</span><span class='line'><span class="nb">xFilesFactor</span> = <span class="m">0</span>
</span><span class='line'><span class="nb">aggregationMethod</span> = sum
</span><span class='line'>
</span><span class='line'><span class="err">[count_legacy]</span>
</span><span class='line'><span class="nb">pattern</span> = ^stats_counts.*
</span><span class='line'><span class="nb">xFilesFactor</span> = <span class="m">0</span>
</span><span class='line'><span class="nb">aggregationMethod</span> = sum
</span><span class='line'>
</span><span class='line'><span class="err">[default_average]</span>
</span><span class='line'><span class="nb">pattern</span> = .*
</span><span class='line'><span class="nb">xFilesFactor</span> = <span class="m">0</span>.3
</span><span class='line'><span class="nb">aggregationMethod</span> = average
</span></code></pre></td></tr></table></div></figure>


<p>Statsd caught me out with a debug mode that <em>only</em> prints to stdout and doesn&rsquo;t actually log any data to graphite, I expected debug mode to print out data in addition to regular duties.</p>

<p>I did need to make statsd listen on all networks instead of just localhost, and still need to wrap it properly as a service.</p>

<p>Edit collectd.conf to enable the plugins you want, the only problem I had here was collectd silently dying if I had a config error.</p>

<p>You need to setup an initial graphite users database</p>

<p>More details at <a href="http://obfuscurity.com/2012/04/Unhelpful-Graphite-Tip-4">http://obfuscurity.com/2012/04/Unhelpful-Graphite-Tip-4</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>/usr/bin/python /usr/lib/python2.6/site-packages/graphite/manage.py syncdb
</span></code></pre></td></tr></table></div></figure>


<p>Writing this up now it all seems quite simple - but I haven&rsquo;t really found it so, I think the main problem has been understanding what graphite is actually doing, and not taking the trouble to optimise that config as a first step.</p>

<p>Pages I found useful</p>

<ul>
<li><a href="https://kevinmccarthy.org/blog/2013/07/18/10-things-i-learned-deploying-graphite/">https://kevinmccarthy.org/blog/2013/07/18/10-things-i-learned-deploying-graphite/</a></li>
<li><a href="http://blog.pkhamre.com/2012/07/24/understanding-statsd-and-graphite/">http://blog.pkhamre.com/2012/07/24/understanding-statsd-and-graphite/</a></li>
<li><a href="http://statsd.readthedocs.org/en/latest/types.html#counters">http://statsd.readthedocs.org/en/latest/types.html#counters</a></li>
<li><a href="http://code.hootsuite.com/accurate-counting-with-graphite-and-statsd/">http://code.hootsuite.com/accurate-counting-with-graphite-and-statsd/</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grafana]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2014/11/19/grafana/"/>
    <updated>2014-11-19T10:07:55+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2014/11/19/grafana</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been playing with some new toys.</p>

<p>What motivated me was a desire to be better able to interpret load test data and performance metrics.</p>

<p>I love graphs, for me the visualisation they provide allows me to recognise patterns and figure out cause/effects massively faster than any other way.</p>

<p>In the past I&rsquo;ve mainly relied on Munin which is very easy to setup, and I&rsquo;ve even customised graphs. My most successful case was when two servers in a pool of four kept falling down, by graphing apache hits per second and severer load for all for servers on the same page - it provided convincing proof that the two servers which fell down did so under no extra load and at the exact same moment. It later turned out these two were VMs on the same host OS which was having previously unnoticed problems.</p>

<p>This visualisation transformed a conversation from one of what could or couldn&rsquo;t be wrong to acceptance and how to fix it.</p>

<p>But with Munin I had to define the graph and then collect the data - I had to wait for another outage.</p>

<p>I wanted to be able to compose graphs on the fly to test hypotheses with existing data - grab the data now and define the graphs to visualise what I want to see after the fact.</p>

<p>Enter <a href="http://play.grafana.org/">Grafana</a> I just love this tool, it allows me to compose graphs entirely on the fly, mixing and matching any data I want on the same graph, or multiple graphs on the same page.</p>

<p>With the <a href="http://graphite.readthedocs.org/en/latest/functions.html#graphite.render.functions.timeShift">timeshift</a> function I can even put say this weeks and last weeks data on the same graph for easy comparison.</p>

<p>I hope to work on some screenshots and maybe screencaps - the tool is so interactive it&rsquo;s hard to explain - for now go an play with it.</p>

<p>Grafana works by calling the json API of graphite-web, one thing that threw me at first was the <a href="http://grafana.org/docs/#graphite-&amp;-elasticsearch-setup-example">initial config example</a></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="err">datasources:</span> <span class="p">{</span>
</span><span class='line'>  <span class="err">graphite:</span> <span class="err">{</span>
</span><span class='line'>    <span class="err">type:</span> <span class="err">&#39;graphite&#39;,</span>
</span><span class='line'>    <span class="err">url:</span> <span class="nt">&quot;http://my.graphite.server.com:8080&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="p">}</span><span class="err">,</span>
</span><span class='line'><span class="err">},</span>
</span></code></pre></td></tr></table></div></figure>


<p>I wasn&rsquo;t sure which server component I was meant to be connecting to on 8080, this is just the regular graphite-web service from apache - in my case on port 80.</p>

<p>It&rsquo;s also worth noting that <a href="graphite%20cannot%20exist%20in%20a%20subdirctory">https://github.com/graphite-project/graphite-web/issues/223</a> at least not for the version I am running.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quick Steps to Secure Ubuntu Linux]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2014/11/13/quick-steps-to-secure-ubuntu-linux/"/>
    <updated>2014-11-13T14:41:12+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2014/11/13/quick-steps-to-secure-ubuntu-linux</id>
    <content type="html"><![CDATA[<p>Recently I&rsquo;ve been reviewing security and realised I&rsquo;ve been relying too much on my routers firewall - which isn&rsquo;t even present if I work on an open wifi connection somewhere.</p>

<p>Steps so far</p>

<p>Reinstalled Ubuntu with full disk encryption, apart from the need to back and restore data this was a painless process. I don&rsquo;t see a noticeable performance impact (though I have a fast system with SSD) the biggest drawback I can see is that if I mess around with a custom kernel and break the boot sequence - I don&rsquo;t know if I can boot from a live CD to fix it.</p>

<p>Setup a restrictive local firewall</p>

<p>as root</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
</span><span class='line'>iptables -I INPUT <span class="m">1</span> -i lo -j ACCEPT
</span><span class='line'>iptables -P INPUT DROP
</span><span class='line'>iptables -S
</span><span class='line'>apt-get install iptables-persistent
</span></code></pre></td></tr></table></div></figure>


<p>edit /etc/postfix/main.cf</p>

<p>set</p>

<p>inet_interfaces = 127.0.0.1</p>

<p>and <code>/etc/init.d/postfix restart</code></p>

<p>I will review open ports each time I configure a new service and ensure I don&rsquo;t have services I only need local accessible externally.</p>

<p>By both configuring firewall <strong>and</strong> limiting services I am applying the principle of defence in depth and even if there is a weakness (or I make a mistake) in one place I will still be protected.</p>

<p>Where I do need to share services between systems on my home/office network I have realised my old router is not sophisticated enough and am purchasing one that can separate secure and insecure networks.</p>

<p>All systems are now being configured for automatic updates, since I want patches as soon as possible, small frequent updates are easier to debug than problems with large updates, and generally I only delay updating out of inertia rather than any deliberate action. This way I don&rsquo;t even have to think about it.</p>

<p>from  <a href="http://www.richud.com/wiki/Ubuntu_Enable_Automatic_Updates_Unattended_Upgrades">http://www.richud.com/wiki/Ubuntu_Enable_Automatic_Updates_Unattended_Upgrades</a></p>

<p>my config files are now</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat /etc/apt/apt.conf.d/50unattended-upgrades  <span class="p">|</span> grep -v ^//
</span><span class='line'>Unattended-Upgrade::Allowed-Origins <span class="o">{</span>
</span><span class='line'>  <span class="s2">&quot;${distro_id}:${distro_codename}-security&quot;</span><span class="p">;</span>
</span><span class='line'>  <span class="s2">&quot;${distro_id}:${distro_codename}-updates&quot;</span><span class="p">;</span>
</span><span class='line'><span class="o">}</span><span class="p">;</span>
</span><span class='line'>Unattended-Upgrade::Package-Blacklist <span class="o">{</span>
</span><span class='line'><span class="o">}</span><span class="p">;</span>
</span><span class='line'>Unattended-Upgrade::MinimalSteps <span class="s2">&quot;true&quot;</span><span class="p">;</span>
</span><span class='line'>Unattended-Upgrade::Mail <span class="s2">&quot;root&quot;</span><span class="p">;</span>
</span><span class='line'>Unattended-Upgrade::Remove-Unused-Dependencies <span class="s2">&quot;false&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>cat /etc/apt/apt.conf.d/10periodic  <span class="p">|</span> grep -v ^//
</span><span class='line'>APT::Periodic::Update-Package-Lists <span class="s2">&quot;1&quot;</span><span class="p">;</span>
</span><span class='line'>APT::Periodic::Download-Upgradeable-Packages <span class="s2">&quot;1&quot;</span><span class="p">;</span>
</span><span class='line'>APT::Periodic::AutocleanInterval <span class="s2">&quot;7&quot;</span><span class="p">;</span>
</span><span class='line'>APT::Periodic::Unattended-Upgrade <span class="s2">&quot;1&quot;</span><span class="p">;</span>
</span><span class='line'>APT::Periodic::Verbose <span class="s2">&quot;2&quot;</span><span class="p">;</span>
</span><span class='line'>APT::Periodic::RandomSleep <span class="s2">&quot;1&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Also set /root/.forward to ensure I get root mail</p>

<p>I have also realised I rely too much on browser stored passwords, and while this is useful for low-security logins I will not be using it for any important site.</p>

<p>Funnily I&rsquo;ve also found I needed to revisit my backup policy and actually delete more stuff <strong>not</strong> backing up code and documents which are business confidential and are already backed up centrally. In this case I realised my own backups were just causing a data management problem just increasing the risk that the data gets accidentally disclosed.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Drupageddon]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2014/10/31/drupageddon/"/>
    <updated>2014-10-31T18:30:52+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2014/10/31/drupageddon</id>
    <content type="html"><![CDATA[<p>Drupal has been in the new today for all the wrong reasons</p>

<p><a href="http://www.bbc.co.uk/news/technology-29846539">Millions of websites hit by Drupal hack attack</a></p>

<p><a href="http://arstechnica.com/security/2014/10/drupal-sites-had-hours-to-patch-before-attacks-started/">Drupal sites had “hours” to patch before attacks started</a></p>

<p><a href="http://www.pcworld.com/article/2841372/drupal-if-you-werent-quick-to-patch-assume-your-site-was-hacked.html">Drupal users: Assume your site was hacked if you didn&rsquo;t apply Oct. 15 patch immediately</a></p>

<p><a href="http://www.forbes.com/sites/thomasbrewster/2014/10/30/did-drupal-drop-the-ball-users-who-didnt-update-within-7-hours-should-assume-theyve-been-hacked/">Did Drupal Drop The Ball? Users Who Didn&rsquo;t Update Within 7 Hours &lsquo;Should Assume They&rsquo;ve Been Hacked&rsquo;</a></p>

<p>The biggest headache for me was the Public Service Announcement <a href="https://www.drupal.org/PSA-2014-003">https://www.drupal.org/PSA-2014-003</a> which is clearly written to alarm users into updating.</p>

<p>We did update our clients site - within 24 hours which at the time seemed pretty good considering the timezones and chaneg control processes involved.</p>

<p>Fortunately we also reload our entire database and other content on each deploy - so even though we took longer than 7 hours to update we consider we are pretty safe (never say 100%) and beyond that we have a lot of other security in place.</p>

<p>However I find myself wondering what else we could have done.</p>

<p>I wish we had a member on the drupal security team - that seems to have helped some people.</p>

<p>I see now there were a couple of (low key) advance notices <a href="https://groups.drupal.org/node/445893">https://groups.drupal.org/node/445893</a> <a href="https://twitter.com/drupalsecurity/status/522128826101669888">https://twitter.com/drupalsecurity/status/522128826101669888</a></p>

<p>I will try to pay better attention to those in the future, but we may also have to enhance our out of hours work, the security annoucment came in at the end of the day - perhaps we will ahve to work overnight another time to review, test, and help the client upgrade.</p>

<p>Hopefully good will come from the thread at <a href="https://groups.drupal.org/node/447468">Follow up Drupageddon responsibly</a></p>

<p>Drupal will need to learn and grow from this.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Now Hosted on Github Pages]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2014/10/31/now-hosted-on-github-pages/"/>
    <updated>2014-10-31T17:55:14+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2014/10/31/now-hosted-on-github-pages</id>
    <content type="html"><![CDATA[<p>Since I&rsquo;ve moved to a static site I&rsquo;m saving myself some hosting fees and moved to <a href="https://help.github.com/categories/github-pages-basics/">Github Pages</a></p>

<p>It&rsquo;s free and fast, saves me from managing a server.</p>
]]></content>
  </entry>
  
</feed>
