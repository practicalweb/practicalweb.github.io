<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Eclipse | PracticalWeb Ltd]]></title>
  <link href="http://www.practicalweb.co.uk/blog/categories/eclipse/atom.xml" rel="self"/>
  <link href="http://www.practicalweb.co.uk/"/>
  <updated>2014-12-03T12:12:50+00:00</updated>
  <id>http://www.practicalweb.co.uk/</id>
  <author>
    <name><![CDATA[Sean Burlington]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Debugging With Maven and Eclipse]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2014/11/19/debugging-with-maven-and-eclipse/"/>
    <updated>2014-11-19T16:11:44+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2014/11/19/debugging-with-maven-and-eclipse</id>
    <content type="html"><![CDATA[<p>To use eclipse with Maven you need to add the maven plugin to eclipse, it seems to be part of the Indigo update site so this should be straightforward.</p>

<p>It&rsquo;s also at <a href="http://download.eclipse.org/technology/m2e/releases">http://download.eclipse.org/technology/m2e/releases</a></p>

<p>More instructions at <a href="http://maven.apache.org/guides/mini/guide-ide-eclipse.html">http://maven.apache.org/guides/mini/guide-ide-eclipse.html</a></p>

<p>To run the debugger you need to do two things: you need to tell maven to run surefire, and run a remote java debug listening to that surefire</p>

<p>Setup a new &ldquo;Debug configuration&rdquo; > &ldquo;Remote Java Application&rdquo;</p>

<p>It should look like</p>

<p><img src="/images/eclipse/maven/surefire.png" alt="screenshot" /></p>

<p>Next you need to run your maven code with the -Dmaven.surefire.debug</p>

<p>You can do this by adding it to the debug config like this</p>

<p><img src="/images/eclipse/maven/main-project.png" alt="screenshot" /></p>

<p>I&rsquo;ve used the debug mode - but maybe a run configuration would work too</p>

<p>An alternative is to run the maven project on command line</p>

<pre><code class="bash">mvn test -Dmaven.surefire.debug
</code></pre>

<p>Generally if I&rsquo;m using eclipse I prefer to do everything in the IDE (I stands for integrated after all) and it&rsquo;s useful to have the console output in the same place</p>

<p>Either way run the project to debug and maven will stop with output</p>

<pre><code>Listening for transport dt_socket at address: 5005
</code></pre>

<p>and wait till your debugger is attached</p>

<p>Now you have to start the remote application debug in eclipse</p>

<p>Execution will now stop at breakpoints and you will be able top explore the stack and all variables set</p>

<p><img src="/images/eclipse/maven/debug.png" alt="screenshot" /></p>

<p>This is an incredibly powerful way to explore running code, <em>especially</em> if you are unfamiliar with it. Even if you are familiar a debugger session can often be very enlightening.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse Hangs]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2013/03/11/eclipse-hangs/"/>
    <updated>2013-03-11T00:00:00+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2013/03/11/eclipse-hangs</id>
    <content type="html"><![CDATA[<p>This worked for me today - saving it here so I can find it again</p>




<p><a href="http://off-topic.biz/en/eclipse-hangs-at-startup-showing-only-the-splash-screen/">http://off-topic.biz/en/eclipse-hangs-at-startup-showing-only-the-splash-screen/</a></p>




<pre>
cd .metadata/.plugins
mv org.eclipse.core.resources org.eclipse.core.resources.bak
Start eclipse. (It should show an error message or an empty workspace because no project is found.)
Close all open editors tabs.
Exit eclipse.
rm -rf org.eclipse.core.resources (Delete the newly created directory.)
mv org.eclipse.core.resources.bak/ org.eclipse.core.resources (Restore the original directory.)
Start eclipse and start working. :-)
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Debugging SOAP With Xdebug and Eclipse]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2010/10/14/debugging-soap-with-xdebug-and-eclipse/"/>
    <updated>2010-10-14T00:00:00+01:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2010/10/14/debugging-soap-with-xdebug-and-eclipse</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been a while since I&rsquo;ve worked on a project which is providing as well as consuming web services.</p>

<p>In this case I need to debug incoming requests that are not initiated from with the browser (I&rsquo;m using <a href="http://www.soapui.org/">soapui</a> as a test tool).</p>

<p>In order to allow Eclipse to pick up xdebug responses triggered by requests from soapui I just needed to</p>

<ul>
<li>start a debuging session within eclipse as normal</li>
<li>ensure that the query string ?XDEBUG_SESSION_START=ECLIPSE_DBGP is appended to all requests by editing the WSDL file so that the address looks like
<code>
<soap:address location="http://dev.example.com/soap_server.php?XDEBUG_SESSION_START=ECLIPSE_DBGP"/>
</code>
</li>

<li>make requests via soapui</li>
</ul>


<p>Now eclipse is picking up the soap requests and I can step through as normal (some tools apply a timeout which can be a nuisance while debugging - I haven&rsquo;t been using soapui long enough yet to see if that&rsquo;s the case here)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Xdebug and Eclipse]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2009/07/21/xdebug-and-eclipse/"/>
    <updated>2009-07-21T00:00:00+01:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2009/07/21/xdebug-and-eclipse</id>
    <content type="html"><![CDATA[<p>
xdebug is an immensely powerful tool for exploring what your code really does.
</p>


<p>
You can get a long way using print_r  but ultimately this always requires that you predict the path your code will take - and the tricky bit about debugging is you need it when your predications have gone wrong.
</p>


<p>
It&#8217;s generally pretty easy to set up
</p>


<ul>
    <li> install the php5-xdebug package</li>
    <li>check that the Eclipse PHP preferences have xdebug as an option</li>
    <li>if you&#8217;re debugging locally the default settings should be OK</li>
    <li>create a site configuration in the debug dialog</li>
    <li>set a break point</li>
    <li>start debugging</li>
</ul>


<p>
If it doesn&#8217;t work at first restart Eclipse
</p>


<p>
Check that you have a browser configured in Eclipse
</p>


<p>
Not all settings seem to be picked up immediately  
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse PDT and Subversion]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2008/11/02/eclipse-pdt-and-subversion/"/>
    <updated>2008-11-02T00:00:00+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2008/11/02/eclipse-pdt-and-subversion</id>
    <content type="html"><![CDATA[<h2>
Version conflicts to be aware of
</h2>


<p>
Ubuntu 8.10 (Intrepid Ibex) now ships with Subversion 1.5 
</p>


<p>
You can&#8217;t use a svn 1.4 client and a svn 1.5 client on the same working copy.
</p>


<p>
While the subversion integration in Eclipse is great I still prefer to do some things on the command line and some with kdesvn.
</p>


<p>
Then you need to upgrade your subclipse plugin to subclipse 1.4
</p>


<p>
If you can - then upgrade to Eclipse 3.4 
</p>


<p>
But Eclipse 3.4 doesn&#8217;t run the latest stable version of PDT - and last time I tried to use an Integration build it was unusable - I may try again sometime but right now I want a small upgrade.
</p>


<p>
I followed this instructions here http://subclipse.tigris.org/install.html
</p>


<p>
But Eclipse reported a &quot;Network problem&quot;
</p>


<p>
So I downloaded the zip file<br />
http://subclipse.tigris.org/files/documents/906/43792/site-1.4.5.zip
</p>


<p>
Unpacked it in a folder on my local webserver, pointed Eclipse at this location and the installation worked!
</p>


<p>
Phew - I have a working Eclipse for PHP development on Ubuntu 8.10 
</p>

]]></content>
  </entry>
  
</feed>
