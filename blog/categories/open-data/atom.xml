<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Open Data | PracticalWeb Ltd]]></title>
  <link href="http://www.practicalweb.co.uk/blog/categories/open-data/atom.xml" rel="self"/>
  <link href="http://www.practicalweb.co.uk/"/>
  <updated>2014-11-28T18:54:21+00:00</updated>
  <id>http://www.practicalweb.co.uk/</id>
  <author>
    <name><![CDATA[Sean Burlington]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OS Open Data]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2010/04/01/os-open-data/"/>
    <updated>2010-04-01T00:00:00+01:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2010/04/01/os-open-data</id>
    <content type="html"><![CDATA[<p>
For several years I worked as a web developer for <a href="http://www.ramblers.org.uk/">the Ramblers</a> and this experience very much colours my view of <a href="http://www.ordnancesurvey.co.uk/opendata">todays release</a> of free maps and postcode data.
</p>


<p>
This is a fantastic and significant step in the direction of ensuring that some of the worlds best mapping assets do the most good for society as a whole.
</p>


<p>
It will no doubt lead to an explosion of new applications and innovations.
</p>


<p>
Not least I expect we&#8217;ll see much better maps being used everywhere that couldn&#8217;t previously negotiate an OS license - not only were licenses expensive they were notoriously unclear.
</p>


<p>
However I can see why <a href="http://www.ramblers.org.uk/news/latest_news/OSfreemaps">the Ramblers are unhappy</a> at todays release   
</p>


<p>
If I want to show a map of a walk in the Lake district 
</p>


<p>
<img src="http://www.practicalweb.co.uk/sites/default/files/u1/lakes1.jpeg" width="413" height="337" /> 
</p>


<p>
That&#8217;s the Lakes&#8230;
</p>


<p>
&nbsp;
</p>


<p>
<img src="http://www.practicalweb.co.uk/sites/default/files/u1/lakes2.jpeg" width="384" height="322" /> 
</p>


<p>
Near Ulswater&#8230;
</p>


<p>
&nbsp;
</p>


<p>
<img src="http://www.practicalweb.co.uk/sites/default/files/u1/lakes3.jpeg" width="446" height="338" /> 
</p>


<p>
It was from Glenridding up towards Helvelyn&#8230;
</p>


<p>
&nbsp;
</p>


<p>
<img src="http://www.practicalweb.co.uk/sites/default/files/u1/lakes4.jpeg" width="500" height="344" />
</p>


<p>
&#8230;Er.. yeah that&#8217;s the place - but where&#8217;s the path! 
</p>


<p>
&nbsp;
</p>


<p>
So this is a brilliant release and even for the Ramblers there&#8217;s loads of stuff they can do today that they either couldn&#8217;t do yesterday or it would have been more expensive and complex. 
</p>


<p>
And loads of smaller organisations will benefit from free maps and postcode data - these will become common on small websites.
</p>


<p>
But the release doesn&#8217;t quite give out the assets required to build the apps I always wanted to build for the Ramblers (walking routes, enhanced walks finder, path problem report tools etc). 
</p>


<p>
&nbsp;
</p>


<p>
Contains Ordnance Survey data (c) Crown copyright and database right 2010
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Accessing CKAN Data From PHP]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2010/02/23/accessing-ckan-data-from-php/"/>
    <updated>2010-02-23T00:00:00+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2010/02/23/accessing-ckan-data-from-php</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been working on a couple of open data projects recently - which has been very rewarding.</p>

<p>A couple of people have asked for some code so I&rsquo;ve knocked up a quick version of the sort of thing I&rsquo;ve been working on.</p>

<p>This code requires PHP 5.1 for the JSON functions but doesn&rsquo;t need any extra libraries (pecl_http can give better error messages but is a bit of a pain to install).</p>

<p>The Notes field in packages returns output in Markdown format - you can convert this to HTMl with a parser available at <a href="http://michelf.com/projects/php-markdown">http://michelf.com/projects/php-markdown</a></p>

<p>This isn&rsquo;t production code so please test before using.</p>

<p>&lt;?php</p>

<p>class Ckan {
    private  $url = &lsquo;<a href="http://www.ckan.net/">http://www.ckan.net/</a>&rsquo;;
    private $errors = array(
                              &lsquo;400&rsquo;  =>   &lsquo;Bad Request&rsquo;,
                              &lsquo;403&rsquo;  =>   &lsquo;Not Authorized&rsquo;,
                              &lsquo;404&rsquo;  =>   &lsquo;Not Found&rsquo;,
                              &lsquo;500&rsquo;  =>   &lsquo;Internal Server Error&rsquo;,
    );</p>

<pre><code>public function __construct($url=null){
    if ($url){
        $this-&gt;url=$url;
    }
}

private function transfer($url){

    $ch = curl_init($this-&gt;url . $url);


    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_HEADER, 0);
    curl_setopt($ch, CURLOPT_TIMEOUT, 30);
    $result = curl_exec($ch);
    $info = curl_getinfo($ch);
    curl_close($ch);
    if ($info['http_code'] != 200){
        throw new CkanException($this-&gt;error_codes["$info[http_code]"]);
    }
    if (!$result){
        throw new CkanException("No Result");
    }
    return json_decode($result);
}

public function search($keyword){
    $results = $this-&gt;transfer('api/search/package/?all_fields=1&amp;q=' . urlencode($keyword));
    if (!$results-&gt;count){
        throw new CkanException("Search Error");
    }
    return $results;
}

public function getPackage($package){
    $package = $this-&gt;transfer('api/rest/package/' . urlencode($package));
    if (!$package-&gt;name){
        throw new CkanException("Package Load Error");
    }
    return $package;
}


public function getPackageList(){
    $list =  $this-&gt;transfer('api/rest/package/');
    if (!is_array($list)){
        throw new CkanException("Package List Error");
    }
    return $list;
}

public function getGroup($group){
    $group = $this-&gt;transfer('api/rest/group/' . urlencode($group) );
    if (!$group-&gt;name){
        throw new CkanException("Group Error");
    }
    return $group;
}

public function getGroupList(){
    $groupList = $this-&gt;transfer('api/rest/group/');
    if (!is_array($groupList)){
        throw new CkanException("Group List Error");
    }
    return $groupList;
}
</code></pre>

<p>}</p>

<p>class CkanException extends Exception{}</p>

<p>?></p>

<p>Test with</p>

<p>&lt;?php</p>

<p>require_once(&ldquo;ckan.php&rdquo;);</p>

<p>$ckan = new Ckan();</p>

<p>$data = $ckan->getPackage(&lsquo;edmonton-data&rsquo;);</p>

<p>print_r($data);</p>

<p>?></p>

<p>I&rsquo;m keeping this file and a Drupal module that uses it on Github at:</p>

<p><a href="http://github.com/practicalweb/drupal-ckan">http://github.com/practicalweb/drupal-ckan</a></p>
]]></content>
  </entry>
  
</feed>
