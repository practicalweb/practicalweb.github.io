<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tinymce | PracticalWeb Ltd]]></title>
  <link href="http://www.practicalweb.co.uk/blog/categories/tinymce/atom.xml" rel="self"/>
  <link href="http://www.practicalweb.co.uk/"/>
  <updated>2016-04-05T15:29:32+01:00</updated>
  <id>http://www.practicalweb.co.uk/</id>
  <author>
    <name><![CDATA[Sean Burlington]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Drupal and TinyMCE]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2009/07/07/drupal-and-tinymce/"/>
    <updated>2009-07-07T00:00:00+01:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2009/07/07/drupal-and-tinymce</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been working on a Drupal project to build a CMS for the production and management of very specific content.</p>

<p>The emphasis is all on the  backend system, with tight field size limits (character count including markup) and restricted input (specified tags only).</p>

<p>Becuase of this I needed to use TinyMCE fully - restricting the  valid_elements set, and adding event handlers for paste, and keyup.</p>

<p>I also had to do this in a moderately deeply nested form.</p>

<p>While I tried quite hard to do this within the Drupal WYSIWYG module  <a href="http://drupal.org/node/488034">http://drupal.org/node/488034</a> it became clear that the project developer and I had incompatible goals. He wanted all features to be available only where they work on all Rich Text Editors, I wanted to use a feature only available in one.</p>

<p>Initially I tried just patching the module, but in the end I just couldn&rsquo;t get it working with multiple tinyMCE configurations in one form. This is supposed to be possible but the documentation is limited</p>

<ul>
<li><a href="http://drupal.org/node/358316">http://drupal.org/node/358316</a></li>
<li><a href="http://api.drupal.org/api/function/filter_form/6">http://api.drupal.org/api/function/filter_form/6</a></li>
<li><a href="http://groups.drupal.org/node/8911">http://groups.drupal.org/node/8911</a></li>
</ul>


<p>Part of the problem is that WYSIWYG works by detecting input filters which requires you to use them (I didn&rsquo;t want to) and using filters means you get &lsquo;help text&rsquo; - using multiple filters means users get to choose which one.</p>

<p>You can theme some of this cruft away - but then where&rsquo;s the benefit   of the easy to use GUI?</p>

<p>So I fell back to using TinyMCE directly, found out there is a nice jquery plugin <a href="http://tinymce.moxiecode.com/examples/example_23.php">http://tinymce.moxiecode.com/examples/example_23.php</a></p>

<p>And got my form up and running exactly as I wanted it in short order.</p>

<p>All I had to do was assign a class to the fields I wanted to be rich text editable,  create my settings, and adapt an existing character counter.</p>

<p>The settings look like</p>

<pre><code class="javascript">
var single = {
    valid_elements                    : 'b,i',
    theme_advanced_buttons1           : "bold,italic,cleanup",
    theme_advanced_buttons2           : "",
    theme_advanced_buttons3           : "",
    theme_advanced_statusbar_location : "bottom",
    theme_advanced_toolbar_location   : "top",
    theme                             : "advanced",
    theme_advanced_resizing           : true,
    plugins                           : "maxlength,safari",
};
</code></pre>

<p> TinyMCE is enabled by the lines</p>

<pre><code class="javascript">
 $().ready(function() {
        $('textarea.mceSingle').tinymce(single);
        $('textarea.mceEditor').tinymce(welcome);
});
</code></pre>

<p>No filters, no cruft in the user interface, and it was quicker to develop!</p>
]]></content>
  </entry>
  
</feed>
