<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Javascript | PracticalWeb Ltd]]></title>
  <link href="http://www.practicalweb.co.uk/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://www.practicalweb.co.uk/"/>
  <updated>2014-12-03T12:12:50+00:00</updated>
  <id>http://www.practicalweb.co.uk/</id>
  <author>
    <name><![CDATA[Sean Burlington]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Drupal and TinyMCE]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2009/07/07/drupal-and-tinymce/"/>
    <updated>2009-07-07T00:00:00+01:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2009/07/07/drupal-and-tinymce</id>
    <content type="html"><![CDATA[<p>
I&#8217;ve been working on a Drupal project to build a CMS for the production and management of very specific content.
</p>


<p>
The emphasis is all on the  backend system, with tight field size limits (character count including markup) and restricted input (specified tags only).
</p>


<p>
Becuase of this I needed to use TinyMCE fully - restricting the  valid_elements set, and adding event handlers for paste, and keyup.
</p>


<p>
I also had to do this in a moderately deeply nested form.
</p>


<p>
While I tried quite hard to do this within the Drupal WYSIWYG module  http://drupal.org/node/488034 it became clear that the project developer and I had incompatible goals. He wanted all features to be available only where they work on all Rich Text Editors, I wanted to use a feature only available in one.
</p>


<p>
Initially I tried just patching the module, but in the end I just couldn&#8217;t get it working with multiple tinyMCE configurations in one form. This is supposed to be possible but the documentation is limited  http://drupal.org/node/358316 http://api.drupal.org/api/function/filter_form/6 http://groups.drupal.org/node/8911
</p>


<p>
Part of the problem is that WYSIWYG works by detecting input filters which requires you to use them (I didn&#8217;t want to) and using filters means you get &#8216;help text&#8217; - using multiple filters means users get to choose which one. 
</p>


<p>
You can theme some of this cruft away - but then where&#8217;s the benefit   of the easy to use GUI?  
</p>


<p>
So I fell back to using TinyMCE directly, found out there is a nice jquery plugin http://tinymce.moxiecode.com/examples/example_23.php
</p>


<p>
And got my form up and running exactly as I wanted it in short order.
</p>


<p>
All I had to do was assign a class to the fields I wanted to be rich text editable,  create my settings, and adapt an existing character counter.
</p>


<p>
The settings look like
</p>


<p><p>
<code></p>

<p>var single = {
    valid_elements                    : &lsquo;b,i&rsquo;,
    theme_advanced_buttons1           : &ldquo;bold,italic,cleanup&rdquo;,
    theme_advanced_buttons2           : &ldquo;&rdquo;,
    theme_advanced_buttons3           : &ldquo;&rdquo;,
    theme_advanced_statusbar_location : &ldquo;bottom&rdquo;,
    theme_advanced_toolbar_location   : &ldquo;top&rdquo;,
    theme                             : &ldquo;advanced&rdquo;,
    theme_advanced_resizing           : true,
    plugins                           : &ldquo;maxlength,safari&rdquo;,
};
</code>
<p>
 TinyMCE is enabled by the lines
</p>
<code>
 $().ready(function() {
        $(&lsquo;textarea.mceSingle&rsquo;).tinymce(single);
        $(&lsquo;textarea.mceEditor&rsquo;).tinymce(welcome);
});
</code><p>
No filters, no cruft in the user interface, and it was quicker to develop!
</p>
<p>
&nbsp;
</p>
<p>
<br />
</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Drupal Forms Require a Submit Button]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2009/07/06/drupal-forms-require-a-submit-button/"/>
    <updated>2009-07-06T00:00:00+01:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2009/07/06/drupal-forms-require-a-submit-button</id>
    <content type="html"><![CDATA[<p>
I&#8217;m working on an AJAX heavy site for a defined audience who all have JavaScript - so I have a form with no submit button that gets submitted by an change handler. 
</p>


<p>
Normally I&#8217;d make sure the site was fully accessible - but not on this project so I just got rid of the submit button. I got the JavaScript submit working only to find my Drupal form no longer worked.
</p>


<p>
It seems that the Drupal submit handlers are not called if the form doesn&#8217;t have a submit button. I can&#8217;t see any reference to this in the Drupal API, but adding the  button back in and hiding it via CSS works fine.
</p>


<p>
&nbsp;
</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Phonegap]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2009/03/24/phonegap/"/>
    <updated>2009-03-24T00:00:00+00:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2009/03/24/phonegap</id>
    <content type="html"><![CDATA[<p>
Phonegap is an open source compatibility layer for mobile development.
</p>


<p>
It provides access to common mobile functionality such as geolocation, sound, contacts etc via a JavaScript API
</p>


<p>
The idea is to make phone development more like web development, and to make deploying cross platform pas much easier.
</p>


<p>
This project looks to be in fairly early stages, but already very powerful.
</p>


<p>
<a href="http://www.phonegap.com/">www.phonegap.com</a>  
</p>

]]></content>
  </entry>
  
</feed>
