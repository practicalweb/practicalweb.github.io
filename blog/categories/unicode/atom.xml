<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Unicode | PracticalWeb Ltd]]></title>
  <link href="http://www.practicalweb.co.uk/blog/categories/unicode/atom.xml" rel="self"/>
  <link href="http://www.practicalweb.co.uk/"/>
  <updated>2014-12-03T12:12:50+00:00</updated>
  <id>http://www.practicalweb.co.uk/</id>
  <author>
    <name><![CDATA[Sean Burlington]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Reading a Unicode Excel File in PHP]]></title>
    <link href="http://www.practicalweb.co.uk/blog/2008/05/18/reading-a-unicode-excel-file-in-php/"/>
    <updated>2008-05-18T00:00:00+01:00</updated>
    <id>http://www.practicalweb.co.uk/blog/2008/05/18/reading-a-unicode-excel-file-in-php</id>
    <content type="html"><![CDATA[<p>It&rsquo;s easy to save an Excel file as CSV and read it in PHP with the <a href="http://www.php.net/fgetcsv">fgetcsv</a> function but this may not work so well if the file contains non-English characters.</p>

<p>Excel uses a non-standard character encoding for csv files.</p>

<p>You can save an Excel file as &lsquo;unicode&rsquo; text however there are several unicode systems - Windows uses UTF-16, and PHP uses UTF-8.</p>

<p>To open the &lsquo;unicode text&rsquo; file in PHP you have to convert it, in addition you may want to be able to open UTF-8 files that may be created by other systems.</p>

<!--break-->


<p>PHP has an encoding detection function - but it can&rsquo;t detect UTF-16.</p>

<p>I&rsquo;ve solved the problem with the following function which detects from several encodings, adds an appropriate filter, and returns a filehandle which reads as UTF-8.</p>

<p><div><script src='https://gist.github.com/1238ffbd56db3b7c8d5b.js'></script>
<noscript><pre><code>&lt;?php

# http://www.practicalweb.co.uk/blog/2008/05/18/reading-a-unicode-excel-file-in-php/

function fopen_utf8($filename){
	$encoding='';
	$handle = fopen($filename, 'r');
	$bom = fread($handle, 2);
//	fclose($handle);
	rewind($handle);
	

	if($bom === chr(0xff).chr(0xfe)  || $bom === chr(0xfe).chr(0xff)){
			// UTF16 Byte Order Mark present
			$encoding = 'UTF-16';
	} else {
		$file_sample = fread($handle, 1000) + 'e'; //read first 1000 bytes
		// + e is a workaround for mb_string bug
		rewind($handle);
	
		$encoding = mb_detect_encoding($file_sample , 'UTF-8, UTF-7, ASCII, EUC-JP,SJIS, eucJP-win, SJIS-win, JIS, ISO-2022-JP');
	}
	if ($encoding){
		stream_filter_append($handle, 'convert.iconv.'.$encoding.'/UTF-8');
	}
	return  ($handle);
} 

?&gt;</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
